// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  name          String?
  recipes       Recipe[]       @relation("recipes")
  settings      Settings?      @relation(fields: [settingsId], references: [id])
  settingsId    Int?
  subscriptions Subscription[]
  comments      Comment[]
}

model Ingredient {
  id    Int    @id @default(autoincrement())
  label String

  recipe   Recipe @relation("ingredients", fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId Int
}

model IngredientList {
  id    Int    @id @default(autoincrement())
  label String @unique
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId  Int
}

model Step {
  id    Int    @id @default(autoincrement())
  label String

  recipe   Recipe @relation("steps", fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId Int
}

model Recipe {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  authorId    Int
  title       String
  description String
  image       String?

  author User @relation("recipes", fields: [authorId], references: [id])

  ingredients Ingredient[] @relation("ingredients")
  steps       Step[]       @relation("steps")
  comments    Comment[]
}

model Settings {
  id     Int    @id @default(autoincrement())
  userId Int
  User   User[]
}

model Subscription {
  id       Int    @id @default(autoincrement())
  endpoint String @unique
  p256dh   String
  auth     String
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
}
